[
  {
    "question": "How do I clone a repository from GitHub?",
    "answer": "Use the command `git clone <repository_url>`."
  },
  {
    "question": "What is the difference between Git and GitHub?",
    "answer": "Git is a version control system, while GitHub is a hosting service for Git repositories."
  },
  {
    "question": "How do I create a new branch in Git?",
    "answer": "Use `git checkout -b <branch-name>` to create and switch to a new branch."
  },
  {
    "question": "What is the purpose of a pull request?",
    "answer": "A pull request lets you propose changes to code in a repository and request a review before merging."
  },
  {
    "question": "What are unit tests?",
    "answer": "Unit tests are automated tests that verify the behavior of a small part of your code, usually functions."
  },
  {
    "question": "What is an API?",
    "answer": "An API (Application Programming Interface) allows different software systems to communicate with each other."
  },
  {
    "question": "What is the difference between frontend and backend development?",
    "answer": "Frontend is what users interact with; backend handles server-side logic and database operations."
  },
  {
    "question": "How do I push my code to a remote Git repository?",
    "answer": "Use `git add .`, `git commit -m \"message\"`, and then `git push origin main`."
  },
  {
    "question": "How do I resolve a Git merge conflict?",
    "answer": "Open the conflicting files, resolve the differences, then use `git add` and `git commit`."
  },
  {
    "question": "What does CI/CD stand for?",
    "answer": "CI/CD stands for Continuous Integration and Continuous Deployment or Delivery."
  },
  {
    "question": "How can I connect to a remote server using SSH?",
    "answer": "Use the command `ssh username@server_address` in your terminal."
  },
  {
    "question": "What is a virtual environment in Python?",
    "answer": "It's an isolated environment where Python packages can be installed without affecting the global installation."
  },
  {
    "question": "What is the purpose of `requirements.txt` in Python?",
    "answer": "It lists all the dependencies of a project so they can be installed with `pip install -r requirements.txt`."
  },
  {
    "question": "How do I run a Python script?",
    "answer": "Use the command `python script_name.py`."
  },
  {
    "question": "What is Docker used for?",
    "answer": "Docker is used to package applications and their dependencies into containers for consistent environments."
  },
  {
    "question": "What is an HTTP status code 404?",
    "answer": "It means 'Not Found' \u2014 the server couldn\u2019t find the requested resource."
  },
  {
    "question": "What is JSON?",
    "answer": "JSON (JavaScript Object Notation) is a lightweight format for storing and exchanging data."
  },
  {
    "question": "How do I handle exceptions in Python?",
    "answer": "Use `try`, `except`, and optionally `finally` blocks to catch and handle exceptions."
  },
  {
    "question": "What is a class in object-oriented programming?",
    "answer": "A class is a blueprint for creating objects with specific attributes and methods."
  },
  {
    "question": "What is a RESTful API?",
    "answer": "It's an API that follows REST principles, using standard HTTP methods like GET, POST, PUT, and DELETE."
  },
  {
    "question": "How do I install a Python package?",
    "answer": "Use `pip install package_name`."
  },
  {
    "question": "What is a database?",
    "answer": "A database is an organized collection of data that can be easily accessed, managed, and updated."
  },
  {
    "question": "What is SQL used for?",
    "answer": "SQL is used to manage and query data in relational databases."
  },
  {
    "question": "What is version control?",
    "answer": "Version control is a system that records changes to a file or set of files over time."
  },
  {
    "question": "How do I check my current Git branch?",
    "answer": "Use the command `git branch` or `git status`."
  },
  {
    "question": "How do I enable dark mode in my IDE?",
    "answer": "Most IDEs like VSCode or IntelliJ offer a theme setting under preferences. Look for 'Color Theme' or 'Appearance'."
  },
  {
    "question": "What is a linter and why should I use one?",
    "answer": "A linter analyzes your code for potential errors and style issues. It helps maintain clean, readable code."
  },
  {
    "question": "How can I automate tasks in my development workflow?",
    "answer": "You can use shell scripts, task runners like Gulp or Grunt, or CI/CD pipelines to automate repetitive tasks."
  },
  {
    "question": "What is a shell script?",
    "answer": "A shell script is a text file containing a sequence of commands for the Unix-based shell to execute."
  },
  {
    "question": "How do I use cron jobs?",
    "answer": "Cron jobs are used to schedule tasks in Unix systems. Use `crontab -e` to edit the job schedule."
  },
  {
    "question": "What is a container?",
    "answer": "A container packages software and its dependencies into a single unit that runs reliably in different environments."
  },
  {
    "question": "What is the difference between container and virtual machine?",
    "answer": "Containers share the host OS kernel while VMs include the entire OS. Containers are more lightweight and faster."
  },
  {
    "question": "What is Kubernetes?",
    "answer": "Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications."
  },
  {
    "question": "How do I contribute to a public GitHub project?",
    "answer": "Fork the repo, create a feature branch, commit changes, and open a pull request with a meaningful description."
  },
  {
    "question": "What is a webhook?",
    "answer": "A webhook is a way for apps to provide other applications with real-time information through HTTP POST requests."
  },
  {
    "question": "How do I use environment variables in Node.js?",
    "answer": "Use `process.env.VARIABLE_NAME` after loading them with a library like dotenv."
  },
  {
    "question": "What is OAuth?",
    "answer": "OAuth is an open standard for access delegation, often used for token-based authentication in web apps."
  },
  {
    "question": "How do I set up two-factor authentication on GitHub?",
    "answer": "Go to GitHub settings \u2192 Security \u2192 Enable 2FA. You\u2019ll need an authentication app or SMS code."
  },
  {
    "question": "What is the DRY principle in coding?",
    "answer": "DRY stands for 'Don't Repeat Yourself'. It encourages reusing code instead of duplicating it."
  },
  {
    "question": "What are design patterns?",
    "answer": "Design patterns are reusable solutions to common problems in software design, like Singleton, Factory, and Observer."
  },
  {
    "question": "What is the difference between synchronous and asynchronous code?",
    "answer": "Synchronous code runs in order; asynchronous code can run in the background, allowing for non-blocking operations."
  },
  {
    "question": "What is an event loop in JavaScript?",
    "answer": "The event loop is a mechanism that allows JavaScript to perform non-blocking operations by handling asynchronous events."
  },
  {
    "question": "What is a middleware in Express.js?",
    "answer": "A middleware function has access to the request and response objects and can modify or end the request-response cycle."
  },
  {
    "question": "How do I write unit tests in Python?",
    "answer": "Use the built-in `unittest` module or third-party tools like `pytest` to create and run tests."
  },
  {
    "question": "What is mocking in unit testing?",
    "answer": "Mocking replaces real objects in your code with simulated ones to test specific parts of your application."
  },
  {
    "question": "What is the SOLID principle in OOP?",
    "answer": "SOLID is an acronym for five design principles: Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion."
  },
  {
    "question": "How do I publish an NPM package?",
    "answer": "Make sure you\u2019re logged in with `npm login`, then run `npm publish` from your project directory."
  },
  {
    "question": "What is semantic versioning?",
    "answer": "Semantic versioning uses a format MAJOR.MINOR.PATCH to describe version changes in software."
  },
  {
    "question": "What is a monorepo?",
    "answer": "A monorepo is a single repository that contains multiple projects, often with shared dependencies."
  },
  {
    "question": "What is a hybrid app?",
    "answer": "A hybrid app is a mobile app built with web technologies and wrapped in a native container for deployment."
  },
  {
    "question": "What is code splitting in web development?",
    "answer": "Code splitting is a technique that breaks down code into smaller chunks, improving performance by loading only what\u2019s needed."
  },
  {
    "question": "How do I deploy a Node.js app?",
    "answer": "You can deploy using platforms like Heroku, Vercel, or by setting up your own server and using `pm2` or Docker."
  },
  {
    "question": "What is a GraphQL API?",
    "answer": "GraphQL is a query language for APIs that allows clients to request exactly the data they need."
  },
  {
    "question": "What is a caching layer?",
    "answer": "A caching layer stores frequently accessed data in memory for fast retrieval and improved performance."
  },
  {
    "question": "How do I improve website performance?",
    "answer": "Minify CSS/JS, use lazy loading, compress images, leverage browser caching, and use a CDN."
  }
]